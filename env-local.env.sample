## The variables below are required for the production enviroment.
## Some might be also required for the local environment.

# Assign this to the adequate Docker context.
# This will be used in the `docker context` command.
# To read more about how to create and use a Docker context, visit
# https://docs.docker.com/engine/reference/commandline/context/
# The default value for a Docker setup is that the local context
# is called `default`.
# When deploying to a remote server, first create a Docker context
# manually, and then reference it here.
export DOCKER_CONTEXT=default

# Set if Node.js should run in `develop` or `production` mode.
NODE_ENV=develop

# These paths are needed to use code and files from other
# repositories (dependencies).
DATA_FILES_PATH=../data-files
DATA_GENERATOR_PATH=../data-generation

# These variables are needed to obtain the SSL certificate from Let's Encrypt.
# The first is the email address to be associated with the SSL certificate.
# The second is the domain name of the server where the deployment is made.
# For local deployments use `localhost`
CERTBOT_EMAIL=
SERVER_NAME=localhost

# These variables are used by Neo4j.
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=password-unhackable

# The variables below control the port range for the FTP connections.
FTP_MIN_PORT=30000
FTP_MAX_PORT=31000

# Change this to the IP of the FTP server. For the local setup, the
# IP 127.0.0.1 is hard-coded in docker-compose-local.yml.
FTP_IP=127.0.0.1

# This variable holds the Nginx IP filter
IP_FILTER="allow 129.16.0.0/16; allow 130.238.0.0/16; deny all;"


## All the variables below concern only the local environment
## and do not need to be configured, as default values are provided
## in docker-compose-local.yml

PORT_NGINX=80
PORT_FRONTEND=81
PORT_NEO4J_1=7474
PORT_NEO4J_2=7687
