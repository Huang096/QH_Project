version: "3.7"

services:
  nginx:
    build:
      context: .
      dockerfile: ./nginx/prod.Dockerfile
      args:
        - VUE_APP_MATOMOID=${VUE_APP_MATOMOID}
        - VUE_APP_HOTJAR=${VUE_APP_HOTJAR}
    ports:
      - "80:80"
      - "443:443"
    environment:
      - CERTBOT_EMAIL=${CERTBOT_EMAIL}
      - SERVER_NAME=${SERVER_NAME}
      - IP_FILTER=${IP_FILTER}
      - ENVSUBST_VARS=SERVER_NAME IP_FILTER
    volumes:
      - letsencrypt:/etc/letsencrypt
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          memory: 0.5G
        limits:
          cpus: "0.40"
          memory: 1G

  api:
    command: yarn start
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          memory: 0.5G
        limits:
          cpus: "0.30"
          memory: 1G

  neo4j:
    environment:
      - NEO4J_dbms_transaction_timeout=40s
      - NEO4J_dbms_memory_heap_initial__size=5G
      - NEO4J_dbms_memory_off__heap_max__size=8G
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          memory: 9G
        limits:
          cpus: "0.65"
          memory: 10G
    ulimits:
      nofile:
        soft: 80000
        hard: 90000

  ftp:
    environment:
      - FTP_IP=${FTP_IP}
      - FLAGS=-Y 1
    volumes:
      - letsencrypt:/etc/letsencrypt:ro
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          memory: 150M
        limits:
          cpus: "0.10"
          memory: 200M

  pg:
    build:
      context: pg
    restart: always
    command: postgres -c stats_temp_directory=/tmp
    volumes:
      - /var/lib/docker-volumes/pg/postgres-data:/var/lib/postgresql/data
    deploy:
      resources:
        reservations:
          memory: 3G
        limits:
          cpus: "0.50"
          memory: 4G

volumes:
  letsencrypt:
