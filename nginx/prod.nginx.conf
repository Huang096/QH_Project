limit_req_zone $binary_remote_addr zone=api_limit:10m rate=25r/s;
limit_req_zone $binary_remote_addr zone=nginx_limit:10m rate=40r/s;

upstream api {
  least_conn;
  server api:8081 weight=10 max_fails=3 fail_timeout=30s;
}

proxy_cache_path /nginx-cache levels=1:2 keys_zone=my_cache:30m inactive=60m use_temp_path=off max_size=3g;

map $sent_http_content_type $expires {
    default                 off;
    text/html               7d;
    text/css                7d;
    text/js                 7d;
    text/javascript         7d;
    application/javascript  7d;
    application/json        7d;
    ~image/                 max;
}

server {
  listen 443 ssl http2 default_server;
  server_name ${SERVER_NAME};

  # protocols
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # disable poodle
  # ciphers
  ssl_prefer_server_ciphers on;

  ssl_certificate     /etc/letsencrypt/live/${SERVER_NAME}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/${SERVER_NAME}/privkey.pem;

  root /content;
  index index.html;

  expires $expires;

  gzip_static on;
  gzip_types
    text/plain
    text/css
    text/js
    text/javascript
    application/javascript
    application/json
    image/svg+xml;

  satisfy any;
  ${IP_FILTER}

  location / {
    limit_req zone=nginx_limit burst=60 nodelay;
    try_files $uri $uri/ @rewrites;
    autoindex off;
    include /etc/nginx/mime.types;
    sendfile    on;
    tcp_nopush  on;
    tcp_nodelay on;
  }

  location @rewrites {
    rewrite ^(.+)$ /index.html last;
  }

  location /api/ {
    limit_req zone=api_limit burst=20 nodelay;
    try_files $uri @proxy;
  }

  location @proxy {
    proxy_pass http://api;
    proxy_cache my_cache;
    proxy_cache_min_uses 3;
    proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
    proxy_http_version  1.1;
    proxy_set_header    Referer $http_referer;
    proxy_set_header    Upgrade $http_upgrade;
    proxy_set_header    Connection 'upgrade';
    proxy_set_header    Host $host;
    proxy_cache_bypass  $http_upgrade;
  }

}
