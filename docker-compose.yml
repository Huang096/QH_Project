backend:
  restart: always
  build: ./hma_backend
  expose:
    - "8000"
  links:
    - postgres:postgres
  volumes:
    - /usr/src/app/static
  env_file: backend.env
  command: /usr/local/bin/gunicorn -c gunicorn.conf runserver:app

nginx:
  restart: always
  build: ./nginx
  ports:
    - "80:80"
  volumes:
    - /www/static
  volumes_from:
    - backend
  links:
    - backend:backend

postgresData:
  image: postgres:latest
  volumes:
    - /var/lib/postgresql
  command: "true"

postgres:
  restart: always
  image: postgres:latest
  env_file: postgres.env
  volumes_from:
    - postgresData
  ports:
    - "5432:5432"


# monitoring & metrics

cadvisor:
  image: google/cadvisor:v0.22.0
  restart: always
  ports:
    - "8080:8080"
  volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker:/var/lib/docker:ro
  links:
    - influxdb
  command: -storage_driver=influxdb -storage_driver_db=cadvisor -storage_driver_host=influxdb:8086

elasticsearch:
  image: elasticsearch:2.2
  ports:
    - "9200:9200"
    - "9300:9300"

logstash:
  build: ./logstash
  ports:
    - "5000:5000"
    - "5000:5000/udp"
  environment:
    - LOGSPOUT=ignore
  command: logstash -f /etc/logstash/conf.d/logstash.conf --debug --verbose
  links:
    - elasticsearch

logspout:
  image: gliderlabs/logspout:v3
  volumes:
    - /var/run/docker.sock:/var/run/docker.sock
  command: syslog://logstash:5000
  links:
    - logstash

kibana:
  image: kibana:4.4
  ports:
    - "5601:5601"
  links:
    - elasticsearch

influxdbData:
  image: busybox
  volumes:
    - ./data/influxdb:/data

influxdb:
  image: tutum/influxdb:0.9
  restart: always
  ports:
    - "8083:8083" # admin site
    - "8086:8086" # API
  environment:
    - PRE_CREATE_DB=cadvisor
    - LOGSPOUT=ignore
  volumes_from:
    - "influxdbData"

grafana:
  image: grafana/grafana:2.6.0
  restart: always
  links:
    - influxdb
  ports:
    - "3000:3000"
  env_file: grafana.env
