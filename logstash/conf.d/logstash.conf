input {
    tcp {
        port => 5000
        type => syslog
    }
    udp {
        port => 5000
        type => syslog
    }
}

filter {
  if [type] == "syslog" {
    grok {
#      match => { "message" => "<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      match => [ "message", "%{SYSLOGBASE} %{GREEDYDATA:message}" ]
      overwrite => [ "message" ]
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    if [message] =~ /hmaprototype_backend_1/ {
      grok {
        match => [ "message", "%{IP:client_ip} %{DATA} \"%{WORD:http_method} %{DATA:query} HTTP/%{NUMBER:http_version}\" %{INT:http_status} \"%{DATA:http_referrer}\" \"%{DATA:user_agent}\" - %{NUMBER:request_time:float}"]
	add_tag => [ "http_access" ]
	remove_field => [ "message" ]
	tag_on_failure => []
      }
    }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  }
}


output {
    elasticsearch {
        hosts => "elasticsearch:9200"
    }
    stdout {
        codec => rubydebug
    }
}